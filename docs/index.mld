{0 Scad_ml}

Scad_ml is a OCaml DSL for the {{:https://openscad.org/} OpenSCAD} solid modelling language.

{1 Notable difference from the OpenSCAD language}

- Angles are represented in radians (and converted to degrees when compiling to
  OpenSCAD).
- The dimensional system (2D or 3D) each shape inhabits is tracked by the type
  system. This is used to restrict the operations that can be legally applied
  (e.g. 2D shapes cannot be moved off of the xy plane,
  {{!Scad_ml.Scad.linear_extrude} [linear_extrude]} can only be applied to 2D shapes)
  and enforcing non-mixing of 2D and 3D shapes during boolean operations.
- Additional modules providing sweeps, roundovers, and more, inspired largely by
  {{:https://github.com/revarbat/BOSL2} BOSL2}, but also other OpenSCAD libraries such
  as {{:https://github.com/JustinSDK/dotSCAD/tree/master/src} dotSCAD}, and
  {{:https://github.com/rcolyer/plot-function} PlotFunction}.

{1 Usage}

{[
  open Scad_ml

  let () =
    let scad_logo =
      let rad = 5.
      and fn = 720 in
      let cyl = Scad.cylinder ~fn ~center:true ~height:(rad *. 2.3) (rad /. 2.) in
      let cross_cyl = Scad.rotate (v3 0. (Float.pi /. 2.) 0.) cyl in
      Scad.union
        [ Scad.difference
            (Scad.sphere ~fn rad)
            [ cyl; cross_cyl; Scad.rotate (v3 0. 0. (Float.pi /. 2.)) cross_cyl ]
        ; Scad.color ~alpha:0.25 Color.Magenta cross_cyl
        ]
    in
    Scad.to_file "scad_logo.scad" scad_logo
]}

{%html: <img src="../assets/scad_logo.png" style="width:125mm;" /> %}

Generted scads can then be viewed with the {{:https://openscad.org/downloads.html} OpenSCAD viewer}
as you normally would.

{1:api API}

{!modules: Scad_ml}

{1:examples Examples}

- {{!page-"rounded_polyhole_sweep"} {b Rounded sweep with holes}}
- {{!page-"polar_rose"} {b Rose polar plot}}

{1:ppx \[@@deriving scad\]}

There is a companion ppx, {{:https://github.com/geoffder/ppx_deriving_scad} \[@@deriving scad\]}
for generating transformation functions for user-defined records and abstract
types made up of the {{!Scad_ml.Scad.t} [Scad.t]}, along with their
corresponding vector ({{!Scad_ml.Vec2.t} [Vec2.t]} or {{!Scad_ml.Vec3.t} [Vec3.t]})
types (and those composed of them) provided in this library.
